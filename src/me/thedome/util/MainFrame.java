package me.thedome.util;

import javax.swing.*;
import javax.swing.text.DefaultCaret;
import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;

/**
 * Package me.thedome.util
 * Created on 03/2018.
 */

public class MainFrame {
	private JPanel panel1;
	private JButton stopButton;
	private JEditorPane textArea;
	private JButton pasteButton;
	private JSpinner waitSpinner;
	private JButton pasteFromClipbordButton;
	private JSpinner keyPressSpinner;
	private JPanel inputsPanel;

	private Paster p;

	public MainFrame() {
		$$$setupUI$$$();
		stopButton.addActionListener(e -> {
			p.stopKeys();
		});

		pasteFromClipbordButton.addActionListener(e -> {

			// Get the text from the clipboard
			Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

			try {
				p = new Paster((String) clipboard.getData(DataFlavor.stringFlavor), Integer.parseInt(waitSpinner.getValue().toString()), stopButton, textArea, Integer.parseInt(keyPressSpinner.getValue().toString()));
				p.start();
			} catch (Exception e1) {
			}
		});


		pasteButton.addActionListener(e -> {
			p = new Paster(textArea.getText(), Integer.parseInt(waitSpinner.getValue().toString()), stopButton, textArea, Integer.parseInt(keyPressSpinner.getValue().toString()));
			p.start();
		});

		// Custom UI code
		DefaultCaret caret = (DefaultCaret) textArea.getCaret();
		caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

		stopButton.setEnabled(false);

		JFrame f = new JFrame();
		f.setContentPane($$$getRootComponent$$$());
		f.setVisible(true);
		f.pack();
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	public static void main(String[] args) {
		new MainFrame(); // TODO: Add main method
	}

	private void createUIComponents() {

		waitSpinner = new JSpinner(new SpinnerNumberModel(3000, 500, 10000, 500));
		keyPressSpinner = new JSpinner((new SpinnerNumberModel(10, 10, 1000, 10)));

		inputsPanel = new JPanel();
		inputsPanel.setMaximumSize(new Dimension(500, inputsPanel.getPreferredSize().height));

	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		createUIComponents();
		panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		inputsPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		inputsPanel.setEnabled(true);
		panel1.add(inputsPanel, BorderLayout.SOUTH);
		stopButton = new JButton();
		stopButton.setHorizontalTextPosition(0);
		stopButton.setText("Stop");
		inputsPanel.add(stopButton);
		pasteFromClipbordButton = new JButton();
		pasteFromClipbordButton.setText("Paste from clipbord!");
		inputsPanel.add(pasteFromClipbordButton);
		pasteButton = new JButton();
		pasteButton.setText("Paste");
		inputsPanel.add(pasteButton);
		inputsPanel.add(waitSpinner);
		final JLabel label1 = new JLabel();
		label1.setText("ms until copy");
		inputsPanel.add(label1);
		inputsPanel.add(keyPressSpinner);
		final JLabel label2 = new JLabel();
		label2.setText("ms between keypress");
		inputsPanel.add(label2);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new BorderLayout(0, 0));
		panel2.setMinimumSize(new Dimension(200, 200));
		panel1.add(panel2, BorderLayout.CENTER);
		final JScrollPane scrollPane1 = new JScrollPane();
		scrollPane1.setMinimumSize(new Dimension(300, 200));
		panel2.add(scrollPane1, BorderLayout.CENTER);
		textArea = new JEditorPane();
		textArea.setMinimumSize(new Dimension(200, 300));
		scrollPane1.setViewportView(textArea);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() { return panel1; }
}
